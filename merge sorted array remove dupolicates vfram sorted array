#include <stdio.h>

// Function to merge two sorted arrays with duplicates
int mergeWithDuplicates(int A[], int n, int B[], int m, int result[]) {
    int i = 0, j = 0, k = 0;

    while (i < n && j < m) {
        if (A[i] < B[j]) {
            result[k++] = A[i++];
        } else if (A[i] > B[j]) {
            result[k++] = B[j++];
        } else {
            // If equal, include both
            result[k++] = A[i++];
            result[k++] = B[j++];
        }
    }

    // Add remaining elements from A[]
    while (i < n) {
        result[k++] = A[i++];
    }

    // Add remaining elements from B[]
    while (j < m) {
        result[k++] = B[j++];
    }

    return k; // size of merged array
}

int main() {
    int A[] = {1, 3, 4, 5, 7};
    int B[] = {2, 3, 5, 6};
    int n = sizeof(A) / sizeof(A[0]);
    int m = sizeof(B) / sizeof(B[0]);
    int result[n + m];  // max possible size

    int size = mergeWithDuplicates(A, n, B, m, result);

    printf("Merged sorted array with duplicates:\n{ ");
    for (int i = 0; i < size; i++) {
        printf("%d ", result[i]);
    }
    printf("}\n");

    return 0;
}
